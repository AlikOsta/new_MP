import React, { useState, useEffect } from 'react';

const SearchBar = ({ 
  onSearch, 
  categories, 
  cities, 
  selectedCategory, 
  selectedCity, 
  onFilterChange,
  activeTab,
  onApplyFilters,
  onResetFilters
}) => {
  const [searchQuery, setSearchQuery] = useState('');
  const [showFilters, setShowFilters] = useState(false);
  const [localFilters, setLocalFilters] = useState({
    sortBy: 'date',
    experience: '',
    schedule: '',
    workFormat: '',
    minSalary: '',
    maxPrice: '',
    category: selectedCategory,
    city: selectedCity
  });

  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã —Å –≤–Ω–µ—à–Ω–∏–º–∏
  useEffect(() => {
    setLocalFilters(prev => ({
      ...prev,
      category: selectedCategory,
      city: selectedCity
    }));
  }, [selectedCategory, selectedCity]);

  const handleSearch = (e) => {
    e.preventDefault();
    onSearch(searchQuery);
  };

  const handleSearchInput = (e) => {
    const value = e.target.value;
    setSearchQuery(value);
    onSearch(value);
  };

  const handleFilterChange = (filterType, value) => {
    setLocalFilters(prev => ({
      ...prev,
      [filterType]: value
    }));
  };

  const handleApplyFilters = () => {
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã
    Object.keys(localFilters).forEach(key => {
      if (localFilters[key] !== '') {
        onFilterChange(key, localFilters[key]);
      }
    });
    onApplyFilters && onApplyFilters(localFilters);
    setShowFilters(false);
  };

  const handleResetFilters = () => {
    const resetFilters = {
      sortBy: 'date',
      experience: '',
      schedule: '',
      workFormat: '',
      minSalary: '',
      maxPrice: '',
      category: '',
      city: ''
    };
    setLocalFilters(resetFilters);
    onResetFilters && onResetFilters();
  };

  return (
    <div className="mt-4">
      <form onSubmit={handleSearch} className="relative">
        <input
          type="text"
          placeholder="–ü–æ–∏—Å–∫..."
          value={searchQuery}
          onChange={handleSearchInput}
          className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
        />
        <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
          <span className="text-gray-400">üîç</span>
        </div>
      </form>

      <button
        onClick={() => setShowFilters(!showFilters)}
        className="mt-3 flex items-center justify-center w-full py-2 px-4 border border-gray-300 rounded-lg bg-white hover:bg-gray-50"
      >
        <span className="mr-2">üè∑Ô∏è</span>
        –§–∏–ª—å—Ç—Ä—ã –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
      </button>

      {showFilters && (
        <div className="mt-3 p-4 bg-white border border-gray-200 rounded-lg space-y-4">
          {/* –û–±—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –ì–æ—Ä–æ–¥
            </label>
            <select
              value={selectedCity}
              onChange={(e) => onFilterChange('city', e.target.value)}
              className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
            >
              <option value="">–í—Å–µ –≥–æ—Ä–æ–¥–∞</option>
              {cities.map(city => (
                <option key={city.id} value={city.id}>
                  {city.name_ru}
                </option>
              ))}
            </select>
          </div>

          {/* –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ
            </label>
            <select
              value={localFilters.sortBy}
              onChange={(e) => handleFilterChange('sortBy', e.target.value)}
              className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
            >
              <option value="date">–î–∞—Ç–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</option>
              <option value="price_asc">–¶–µ–Ω–µ (–ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é)</option>
              <option value="price_desc">–¶–µ–Ω–µ (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)</option>
              <option value="views">–ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏</option>
            </select>
          </div>

          {/* –§–∏–ª—å—Ç—Ä—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã */}
          {activeTab === 'job' && (
            <>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã
                </label>
                <select 
                  value={experience}
                  onChange={(e) => handleJobFilterChange('experience', e.target.value)}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
                >
                  <option value="">–õ—é–±–æ–π</option>
                  <option value="no_experience">–ë–µ–∑ –æ–ø—ã—Ç–∞</option>
                  <option value="up_to_1_year">–î–æ 1 –≥–æ–¥–∞</option>
                  <option value="from_1_to_3_years">1-3 –≥–æ–¥–∞</option>
                  <option value="from_3_to_6_years">3-6 –ª–µ—Ç</option>
                  <option value="more_than_6_years">6+ –ª–µ—Ç</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã
                </label>
                <select 
                  value={schedule}
                  onChange={(e) => handleJobFilterChange('schedule', e.target.value)}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
                >
                  <option value="">–õ—é–±–æ–π</option>
                  <option value="full_time">–ü–æ–ª–Ω—ã–π –¥–µ–Ω—å</option>
                  <option value="part_time">–ß–∞—Å—Ç–∏—á–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å</option>
                  <option value="project">–ü—Ä–æ–µ–∫—Ç–Ω–∞—è —Ä–∞–±–æ—Ç–∞</option>
                  <option value="freelance">–§—Ä–∏–ª–∞–Ω—Å</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã
                </label>
                <select 
                  value={workFormat}
                  onChange={(e) => handleJobFilterChange('work_format', e.target.value)}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
                >
                  <option value="">–õ—é–±–æ–π</option>
                  <option value="office">–û—Ñ–∏—Å</option>
                  <option value="remote">–£–¥–∞–ª–µ–Ω–Ω–æ</option>
                  <option value="hybrid">–ì–∏–±—Ä–∏–¥</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ó–∞—Ä–ø–ª–∞—Ç–∞ –æ—Ç
                </label>
                <input
                  type="number"
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, 50000"
                  value={minSalary}
                  onChange={(e) => handleJobFilterChange('min_salary', e.target.value)}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
                />
              </div>
            </>
          )}

          {/* –§–∏–ª—å—Ç—Ä—ã –¥–ª—è —É—Å–ª—É–≥ */}
          {activeTab === 'service' && (
            <>
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ª—É–≥
                </label>
                <select
                  value={selectedCategory}
                  onChange={(e) => onFilterChange('category', e.target.value)}
                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
                >
                  <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                  {categories.filter(cat => cat.name_ru === '–£—Å–ª—É–≥–∏').map(category => (
                    <option key={category.id} value={category.id}>
                      {category.name_ru}
                    </option>
                  ))}
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ
                </label>
                <input
                  type="number"
                  placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, 5000"
                  className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
                />
              </div>
            </>
          )}
        </div>
      )}
    </div>
  );
};

export default SearchBar;