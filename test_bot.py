#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Telegram –±–æ—Ç–∞
"""

import asyncio
import os
import sys
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
load_dotenv('backend/.env')
load_dotenv('frontend/.env')
load_dotenv('.env')

async def test_bot_components():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–æ—Ç–∞"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ Telegram –±–æ—Ç–∞...")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    bot_token = os.getenv('TELEGRAM_BOT_TOKEN')
    payment_token = os.getenv('TELEGRAM_PAYMENTS_TOKEN')
    backend_url = os.getenv('REACT_APP_BACKEND_URL')
    
    print(f"   BOT_TOKEN: {'‚úÖ –ù–∞–π–¥–µ–Ω' if bot_token else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}")
    print(f"   PAYMENT_TOKEN: {'‚úÖ –ù–∞–π–¥–µ–Ω' if payment_token else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}")
    print(f"   BACKEND_URL: {backend_url or '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}")
    
    if not bot_token or not payment_token:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–æ–∫–µ–Ω—ã!")
        return False
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç telegram-bot
    print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ python-telegram-bot:")
    try:
        from telegram import Bot
        print("   ‚úÖ python-telegram-bot –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except ImportError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º httpx –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ backend
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ httpx:")
    try:
        import httpx
        print("   ‚úÖ httpx –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except ImportError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å backend API
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å backend:")
    try:
        async with httpx.AsyncClient(timeout=5.0) as client:
            response = await client.get(f"{backend_url}/api/health")
            if response.status_code == 200:
                print("   ‚úÖ Backend API –æ—Ç–≤–µ—á–∞–µ—Ç")
                data = response.json()
                print(f"   üìä –í–µ—Ä—Å–∏—è API: {data.get('version', 'unknown')}")
            else:
                print(f"   ‚ùå Backend API –æ—à–∏–±–∫–∞: {response.status_code}")
                return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å backend: {e}")
        return False
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º API —Ç–∞—Ä–∏—Ñ–æ–≤
    print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ API —Ç–∞—Ä–∏—Ñ–æ–≤:")
    try:
        async with httpx.AsyncClient(timeout=5.0) as client:
            response = await client.get(f"{backend_url}/api/categories/all")
            if response.status_code == 200:
                data = response.json()
                packages = data.get('packages', [])
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–∞—Ä–∏—Ñ–æ–≤: {len(packages)}")
                
                for pkg in packages[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    print(f"   üì¶ {pkg['name_ru']} - {pkg['price']} RUB")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–æ–≤: {response.status_code}")
                return False
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–æ–≤: {e}")
        return False
    
    # 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ Bot –æ–±—ä–µ–∫—Ç–∞
    print("\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è Bot –æ–±—ä–µ–∫—Ç–∞:")
    try:
        bot = Bot(token=bot_token)
        print("   ‚úÖ Bot –æ–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await bot.get_me()
        print(f"   ü§ñ –ò–º—è –±–æ—Ç–∞: @{bot_info.username}")
        print(f"   üÜî ID –±–æ—Ç–∞: {bot_info.id}")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–∞: {e}")
        return False
    
    print("\n‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –±–æ—Ç–∞ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìù –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   python telegram_bot.py")
    
    return True

if __name__ == "__main__":
    success = asyncio.run(test_bot_components())
    sys.exit(0 if success else 1)